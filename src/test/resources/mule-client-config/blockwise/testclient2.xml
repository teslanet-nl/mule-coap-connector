<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Mule CoAP Connector
  %%
  Copyright (C) 2019 - 2021 (teslanet.nl) Rogier Cobben
  
  Contributors:
      (teslanet.nl) Rogier Cobben - initial creation
  %%
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License 2.0 which is available at
  http://www.eclipse.org/legal/epl-2.0.
  
  This Source Code may also be made available under the following Secondary
  Licenses when the conditions for such availability set forth in the Eclipse
  Public License, v. 2.0 are satisfied: GNU General Public License, version 2
  with the GNU Classpath Exception which is
  available at https://www.gnu.org/software/classpath/license.html.
  
  SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
  #L%
  -->

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java"
  xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
  xmlns:coap="http://www.teslanet.nl/schema/mule/coap"
  xmlns="http://www.mulesoft.org/schema/mule/core"
  xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
  http://www.teslanet.nl/schema/mule/coap http://www.teslanet.nl/schema/mule/coap/current/mule-coap.xsd
  http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
  http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

  <description>Mule CoAP connector test application</description>

  <coap:udp-endpoint name="Udp_Endpoint" logCoapMessages="true">
    <coap:socket-params bindToPort="0"/>
    <coap:exchange-params exchangeLifetime="10000"/>
  </coap:udp-endpoint>

  <coap:client-config name="config" host="127.0.0.1" endpoint="Udp_Endpoint"/>

  <coap:udp-endpoint name="Udp_Endpoint2" logCoapMessages="true">
    <coap:socket-params bindToPort="0"/>
    <coap:exchange-params exchangeLifetime="10000"/>
    <coap:blockwise-params maxResourceBodySize="16000"/>
  </coap:udp-endpoint>

  <coap:client-config name="config2" host="127.0.0.1" port="5685" endpoint="Udp_Endpoint2"/>

  <flow name="do_get">
    <coap:request doc:name="Request" config-ref="config" requestCode="GET" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_get"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_post">
    <coap:request doc:name="Request" config-ref="config" requestCode="POST" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_post"/>
    <flow-ref name="spy"/>  </flow>

  <flow name="do_put">
    <coap:request doc:name="Request" config-ref="config" requestCode="PUT" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_put"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_delete">
    <coap:request doc:name="Request" config-ref="config" requestCode="DELETE" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_delete"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_get2">
    <coap:request doc:name="Request" config-ref="config2" requestCode="GET" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_get2"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_post2">
    <coap:request doc:name="Request" config-ref="config2" requestCode="POST" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_post2"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_put2">
    <coap:request doc:name="Request" config-ref="config2" requestCode="PUT" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_put2"/>
    <flow-ref name="spy"/>
  </flow>

  <flow name="do_delete2">
    <coap:request doc:name="Request" config-ref="config2" requestCode="DELETE" path="#[vars.path]" forcePayload="true">
      <coap:request-payload><![CDATA[#[payload]]]></coap:request-payload>
    </coap:request>
    <set-variable variableName="spyname" value="do_delete2"/>
    <flow-ref name="spy"/>
  </flow>

  <sub-flow name="spy">
    <java:new doc:name="New spy" doc:id="5bb95d63-aab2-4453-95c7-fa180f548484"
      class="nl.teslanet.mule.connectors.coap.test.utils.MuleEventSpy"
      constructor="MuleEventSpy(String)" target="spy">
      <java:args><![CDATA[#[{ arg0: vars.spyname }]]]></java:args>
    </java:new>
    <java:invoke doc:name="Invoke" doc:id="b847eac5-455a-4477-b035-90e7d6c4a45d"
      instance="#[vars.spy]" class="nl.teslanet.mule.connectors.coap.test.utils.MuleEventSpy"
      method="event(Object)">
      <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
    </java:invoke>
  </sub-flow>
</mule>

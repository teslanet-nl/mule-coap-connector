<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Mule CoAP Connector
  %%
  Copyright (C) 2025 (teslanet.nl) Rogier Cobben
  
  Contributors:
      (teslanet.nl) Rogier Cobben - initial creation
  %%
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License 2.0 which is available at
  http://www.eclipse.org/legal/epl-2.0.
  
  This Source Code may also be made available under the following Secondary
  Licenses when the conditions for such availability set forth in the Eclipse
  Public License, v. 2.0 are satisfied: GNU General Public License, version 2
  with the GNU Classpath Exception which is
  available at https://www.gnu.org/software/classpath/license.html.
  
  SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
  #L%
  -->
<mule 
    xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:coap="http://www.teslanet.nl/schema/mule/coap"
    xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.teslanet.nl/schema/mule/coap http://www.teslanet.nl/schema/mule/coap/current/mule-coap.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
">
	<description>Mule CoAP connector test application</description>

	<coap:server-config name="config">
		<coap:endpoint>
			<coap:udp-endpoint logTraffic="true">
				<coap:socket-params bindToPort="5683" />
			</coap:udp-endpoint>
		</coap:endpoint>
		<coap:resources>
            <coap:resource resourceName="do_request" post="true" />
		</coap:resources>
	</coap:server-config>

    <flow name="listen">
        <coap:listener config-ref="config" pathPattern="/*" get="true"
            post="true" put="true" delete="true"
            fetch="true" patch="true" ipatch="true">
            <coap:response responseCode="#[ vars.responseCode ]" responsePayload="#[null]" />
        </coap:listener>
        <choice doc:name="map responseCode to prevent resends" >
            <when expression="#[payload as String == 'REQUEST_ENTITY_TOO_LARGE']">
                <set-variable variableName="responseCode" value="NOT_FOUND"  />
            </when>
             <when expression="#[payload as String == 'REQUEST_ENTITY_INCOMPLETE']">
                <set-variable variableName="responseCode" value="NOT_FOUND"  />
            </when>
            <otherwise >
                <set-variable variableName="responseCode" value="#[ payload as String ]"/>
            </otherwise>
        </choice>
        <java:new
            class="nl.teslanet.mule.connectors.coap.test.utils.MuleEventSpy"
            constructor="MuleEventSpy(String)" target="spy">
            <java:args><![CDATA[#[{ arg0: "do_request" }]]]></java:args>
        </java:new>
        <java:invoke instance="#[vars.spy]"
            class="nl.teslanet.mule.connectors.coap.test.utils.MuleEventSpy"
            method="event(Object)">
            <java:args><![CDATA[#[{ arg0: message }]]]></java:args>
        </java:invoke>
    </flow>

</mule>

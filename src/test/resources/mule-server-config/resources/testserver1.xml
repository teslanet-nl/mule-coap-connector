<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Mule CoAP Connector
  %%
  Copyright (C) 2019 - 2024 (teslanet.nl) Rogier Cobben
  
  Contributors:
      (teslanet.nl) Rogier Cobben - initial creation
  %%
  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License 2.0 which is available at
  http://www.eclipse.org/legal/epl-2.0.
  
  This Source Code may also be made available under the following Secondary
  Licenses when the conditions for such availability set forth in the Eclipse
  Public License, v. 2.0 are satisfied: GNU General Public License, version 2
  with the GNU Classpath Exception which is
  available at https://www.gnu.org/software/classpath/license.html.
  
  SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
  #L%
  -->

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:java="http://www.mulesoft.org/schema/mule/java"
		xmlns:coap="http://www.teslanet.nl/schema/mule/coap"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.teslanet.nl/schema/mule/coap http://www.teslanet.nl/schema/mule/coap/current/mule-coap.xsd

http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
	">

	<description>Mule CoAP connector test application</description>

	<coap:udp-endpoint name="udp" logTraffic="true">
		<coap:socket-params bindToPort="5683" /><coap:exchange-params exchangeLifetime="1s" />
	</coap:udp-endpoint>

	<coap:server-config name="config">

		<coap:endpoint udpEndpoint="udp" />

		<coap:resources>
			<coap:resource resourceName="add_resource">
				<coap:sub-resources>
					<coap:resource resourceName="all_methods" post="true" />
					<coap:resource resourceName="get_only" post="true" />
					<coap:resource resourceName="post_only" post="true" />
					<coap:resource resourceName="put_only" post="true" />
					<coap:resource resourceName="delete_only" post="true" />
				</coap:sub-resources>
			</coap:resource>
			<coap:resource resourceName="exists" post="true" />
			<coap:resource resourceName="list" post="true" />
			<coap:resource resourceName="service">
				<coap:sub-resources>
					<coap:resource resourceName="resource1" get="true"
						post="true" put="true" delete="true" observable="true">
						<coap:sub-resources>
							<coap:resource resourceName="resource2" get="true"
								post="true" put="true" delete="true" observable="true">
								<coap:sub-resources>
									<coap:resource resourceName="resource3"
										get="true" post="true" put="true" delete="true"
										observable="true" />
								</coap:sub-resources>
							</coap:resource>
						</coap:sub-resources>
					</coap:resource>
					<coap:resource resourceName="resource-to-remove"
						get="true" post="true" put="true" delete="true" observable="true" />
				</coap:sub-resources>
			</coap:resource>
		</coap:resources>
	</coap:server-config>

	<os:object-store name="Object_store"
		doc:name="Object store" doc:id="249c6420-a649-4d60-8331-17c6eeca6ca8"
		persistent="false" />

	<flow name="listen_add_resource">
		<coap:listener get="true" post="true" put="true"
			delete="true" pathPattern="/add_resource/*" config-ref="config">
			<coap:response responseCode="#[vars.response_code]" />
			<coap:response-options
				locationPath="#[vars.resource_path]" />
		</coap:listener>
		<set-variable variableName="attr" value="#[ attributes ]"
			doc:name="set attr" />
		<set-variable variableName="method"
			value="#[ vars.attr.requestCode ]" doc:name="set method" />
		<set-variable variableName="uri"
			value="#[ (java!java::net::URI::create( attributes.requestUri )).path ]" doc:name="set method" />
		<set-variable variableName="resource_path"
			value="#[payload]" doc:name="set resource_path" />

		<choice doc:name="by method">
			<when expression="#[ vars.uri == '/add_resource/all_methods' ]">
				<set-variable variableName="get" value="true" />
				<set-variable variableName="post" value="true" />
				<set-variable variableName="put" value="true" />
				<set-variable variableName="delete" value="true" />
				<flow-ref name="add_resource" doc:name="add_resource" />
			</when>
			<when expression="#[ vars.uri == '/add_resource/get_only' ]">
				<set-variable variableName="get" value="true" />
				<set-variable variableName="post" value="false" />
				<set-variable variableName="put" value="false" />
				<set-variable variableName="delete" value="false" />
				<flow-ref name="add_resource" doc:name="add_resource" />
			</when>
			<when expression="#[ vars.uri == '/add_resource/post_only' ]">
				<set-variable variableName="get" value="false" />
				<set-variable variableName="post" value="true" />
				<set-variable variableName="put" value="false" />
				<set-variable variableName="delete" value="false" />
				<flow-ref name="add_resource" doc:name="add_resource" />
			</when>
			<when expression="#[ vars.uri == '/add_resource/put_only' ]">
				<set-variable variableName="get" value="false" />
				<set-variable variableName="post" value="false" />
				<set-variable variableName="put" value="true" />
				<set-variable variableName="delete" value="false" />
				<flow-ref name="add_resource" doc:name="add_resource" />
			</when>
			<when expression="#[ vars.uri == '/add_resource/delete_only' ]">
				<set-variable variableName="get" value="false" />
				<set-variable variableName="post" value="false" />
				<set-variable variableName="put" value="false" />
				<set-variable variableName="delete" value="true" />
				<flow-ref name="add_resource" doc:name="add_resource" />
			</when>
			<otherwise>
				<set-payload value="not expected" doc:name="Set Payload" />
				<set-variable variableName="response_code"
					value="BAD_REQUEST" />
			</otherwise>
		</choice>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="3ec655ff-fdca-470b-ade4-e527f3467a88" type="COAP:INVALID_RESOURCE_URI">
				<set-payload value="#[error.errorType.identifier]" doc:name="Set Payload" doc:id="58135f77-43f0-4094-b601-23492b0e1052" />
				<set-variable variableName="response_code"
					value="BAD_REQUEST" />
			</on-error-continue>
		</error-handler>
	</flow>

	<sub-flow name="add_resource">
		<choice doc:name="Choice" doc:id="5e583f75-4eec-45b4-acab-5e8ae4488bf2" >
			<when expression="#[!isBlank( vars.resource_path )]">
				<os:store objectStore="Object_store" doc:name="Store" key="#[vars.resource_path]" failOnNullValue="false" />
			</when>
		</choice>
		<coap:resource-add config-ref="config"
			resourcePath="#[vars.resource_path]" get="#[vars.get]"
			put="#[vars.put]" post="#[vars.post]" delete="#[vars.delete]"
			doc:name="add resource" />
		<set-variable variableName="location_path"
			value="#[vars.resource_path]" />
		<set-variable variableName="response_code"
			value="CREATED" />
	</sub-flow>

	<flow name="listen_exists">
		<coap:listener post="true" pathPattern="/exists" config-ref="config">
			<coap:response responseCode="CONTENT"
				responsePayload="#[ payload as String ]" />
		</coap:listener>
		<coap:resource-exists config-ref="config"
			pathPattern="#[ payload ]" />
	</flow>
	
	<flow name="listen_list">
		<coap:listener post="true" pathPattern="/list" config-ref="config">
			<coap:response responseCode="CONTENT"
				responsePayload="#[ payload joinBy (',') ]" />
		</coap:listener>
		<coap:resource-list config-ref="config"
			pathPattern="#[ payload ]" />
	</flow>

	<flow name="listen_service_resource">
		<coap:listener get="true" post="true" put="true"
			delete="true" pathPattern="/service/*" config-ref="config">
			<coap:response responseCode="#[ vars.response_code]" />
		</coap:listener>

		<set-variable variableName="method"
			value="#[ attributes.requestCode ]" doc:name="set method" />
		<set-variable variableName="uri"
			value="#[ (java!java::net::URI::create( attributes.requestUri )).path ]" doc:name="set method" />
		<set-variable variableName="attr" value="#[ attributes ]"
			doc:name="set attr" />

		<choice doc:name="by method">
			<when expression="#[vars.method == 'GET']">
				<os:retrieve doc:name="Retrieve" key="#[ vars.uri ]"
					objectStore="Object_store">
					<os:default-value><![CDATA[#['']]]></os:default-value>
				</os:retrieve>
				<set-variable variableName="response_code"
					value="CONTENT" />
			</when>
			<when expression="#[ vars.method == 'PUT']">
				<os:store doc:name="Store" key="#[ vars.uri ]"
					failOnNullValue="false" objectStore="Object_store" />
				<coap:notify config-ref="config"
					pathPattern="#[ vars.uri ]" doc:name="resource changed" />
				<set-variable variableName="response_code"
					value="CHANGED" />
				<set-payload value="OK" doc:name="return OK"
					doc:id="509de38a-e978-4b5c-a35a-6aa803eee68e" />

			</when>
			<when expression="#[vars.method == 'POST']">
				<os:store doc:name="Store" key="#[ vars.uri ]"
					failOnNullValue="false" objectStore="Object_store" />
				<coap:notify config-ref="config"
					pathPattern="#[ vars.uri ]" doc:name="resource changed" />
				<set-variable variableName="response_code"
					value="CHANGED" />
				<set-payload value="OK" doc:name="return OK"
					doc:id="1fa85d9c-0c23-4641-a3a0-198b0ed45d7a" />
			</when>
			<when expression="#[vars.method == 'DELETE']">
				<os:contains doc:name="Contains" key="#[ vars.uri ]"
					objectStore="Object_store" target="exists" />
				<choice doc:name="Choice">
					<when expression="#[vars.exists]">
						<os:remove doc:name="Remove" key="#[ vars.uri ]"
							objectStore="Object_store" />
					</when>
				</choice>
				<coap:resource-remove config-ref="config"
					pathPattern="#[ vars.uri ]" />
				<set-variable variableName="response_code"
					value="DELETED" />
				<set-payload value="OK" doc:name="return OK"
					doc:id="8046e2bd-abbb-4996-b58d-cbe7c19ab447" />
			</when>
			<otherwise>
				<set-payload value="not expected" doc:name="Set Payload" />
				<set-variable variableName="response_code"
					value="INTERNAL_SERVER_ERROR" />
			</otherwise>
		</choice>
	</flow>

</mule>

